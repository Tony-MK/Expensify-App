"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const NativeReactNativeHybridApp_1 = require("./NativeReactNativeHybridApp");
const HybridAppModule = {
    isHybridApp() {
        return NativeReactNativeHybridApp_1.default.isHybridApp();
    },
    shouldUseStaging(isStaging) {
        NativeReactNativeHybridApp_1.default.shouldUseStaging(isStaging);
    },
    closeReactNativeApp({ shouldSetNVP }) {
        NativeReactNativeHybridApp_1.default.closeReactNativeApp(shouldSetNVP);
    },
    completeOnboarding({ status }) {
        NativeReactNativeHybridApp_1.default.completeOnboarding(status);
    },
    switchAccount({ newDotCurrentAccountEmail, authToken, policyID, accountID }) {
        NativeReactNativeHybridApp_1.default.switchAccount(newDotCurrentAccountEmail, authToken, policyID, accountID);
    },
    sendAuthToken({ authToken }) {
        NativeReactNativeHybridApp_1.default.sendAuthToken(authToken);
    },
    getHybridAppSettings() {
        return NativeReactNativeHybridApp_1.default.getHybridAppSettings();
    },
    getInitialURL() {
        return NativeReactNativeHybridApp_1.default.getInitialURL();
    },
    onURLListenerAdded() {
        NativeReactNativeHybridApp_1.default.onURLListenerAdded();
    },
    signInToOldDot({ autoGeneratedLogin, autoGeneratedPassword, authToken, email, policyID }) {
        NativeReactNativeHybridApp_1.default.signInToOldDot(autoGeneratedLogin, autoGeneratedPassword, authToken, email, policyID);
    },
    signOutFromOldDot() {
        NativeReactNativeHybridApp_1.default.signOutFromOldDot();
    },
    clearOldDotAfterSignOut() {
        NativeReactNativeHybridApp_1.default.clearOldDotAfterSignOut();
    },
};
exports.default = HybridAppModule;
