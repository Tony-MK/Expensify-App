"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Motivation for this function is described in NAVIGATION.md
 *
 * @param action action generated by getActionFromState
 * @param state The root state
 * @returns minimalAction minimal action is the action that we should dispatch
 */
function getMinimalAction(action, state) {
    let currentAction = action;
    let currentState = state;
    let currentTargetKey;
    while (currentAction.payload && 'name' in currentAction.payload && currentState?.routes[currentState.index ?? -1].name === currentAction.payload.name) {
        if (!currentState?.routes[currentState.index ?? -1].state) {
            break;
        }
        currentState = currentState?.routes[currentState.index ?? -1].state;
        currentTargetKey = currentState?.key;
        const payload = currentAction.payload;
        // Creating new smaller action
        currentAction = {
            type: currentAction.type,
            payload: {
                name: payload?.params?.screen,
                params: payload?.params?.params,
                path: payload?.params?.path,
            },
            target: currentTargetKey,
        };
    }
    return { action: currentAction, targetState: currentState };
}
exports.default = getMinimalAction;
